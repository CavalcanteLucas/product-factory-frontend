describe('Test Capability', () => {
    before(() => {
        cy.visit('/')
        cy.get('.ant-row').eq(1).find('button').click()
        cy.url().should('include', '/switch-test-user')
        })
    it('Test Create Capability', () => {
            cy.get('form').find('button').first().should('have.text', 'Sign in')
            cy.get('form').find('span').eq(1).click()
            cy.get('.ant-select-item-option').eq(1).click()
            cy.get('.ant-select-item-option').eq(1).should('not.have.text', 'Select').and('not.be.empty')
            const button = cy.get('form').find('button').first()
            button.contains('Sign in').click()
            cy.get('.ant-message-notice-content').should('have.text', 'User was successfully log in')
            cy.get('.ant-tabs-tab-btn').contains('Products').click()
            cy.get('.ant-card-body').contains('AuthMachine').click()
            cy.get('.product-page-children').find('button').contains('Add new capability').click()
            cy.get('.ant-modal-body').find('.ant-input').first().type('Test foreign').should('have.value', 'Test foreign')  // First input field
            cy.get('.rdw-editor-main').type('Hello here we are testing').should('not.be.empty')
            cy.get('.ant-modal-body').find('.ant-input').eq(1).type('www.test.com').should('have.value', 'www.test.com')
            cy.get('.ant-modal-content').find('.ant-modal-body').find('button').contains('Add').click()
            cy.get('.ant-modal-body').eq(1).find('input').type('www.url.com').should('have.value', 'www.url.com')
            cy.get('.ant-modal-content').eq(1).find('button').eq(2).click()
            cy.get('.ant-message-notice-content').should('have.text', 'Initiative is created successfully!')
            cy.get('.ant-modal-footer').first().find('button').eq(1).click()
            cy.get('.ant-message-notice-content').should('have.text', 'Capability is created successfully!')
            cy.get('.ant-dropdown-trigger').first().click()
            cy.get('.signIn-btn').contains('Sign out').click()
            })

    it('Test Edit Capability', () => {
            cy.get('form').find('button').first().should('have.text', 'Sign in')
            cy.get('form').find('span').eq(1).click()
            cy.get('.ant-select-item-option').eq(1).click()
            cy.get('.ant-select-item-option').eq(1).should('not.have.text', 'Select').and('not.be.empty')
            const button = cy.get('form').find('button').first()
            button.contains('Sign in').click()
            cy.get('.ant-message-notice-content').should('have.text', 'User was successfully log in')
            cy.get('.ant-tabs-tab-btn').contains('Products').click()
            cy.get('.ant-card-body').contains('AuthMachine').click()
            cy.get('.rst__row').find('.rst__rowLabel').find('a').contains('Test foreign').click()
            cy.get('.ant-avatar-icon').click()
            cy.get('.ant-modal-body').find('.ant-input').first().clear().type('Test capability').should('have.value','Test capability')  // First input field
            cy.get('.rdw-editor-main').find('.DraftEditor-root').clear().type('we are testing here').should('not.be.empty')
            cy.get('.ant-modal-body').find('.ant-input').eq(1).clear().type('www.url.com').should('have.value', 'www.url.com')
            cy.get('.ant-modal-content').find('.ant-modal-body').find('button').contains('Add').click()
            cy.get('.ant-modal-body').eq(1).find('input').type('www.url.com').should('have.value', 'www.url.com')
            cy.get('.ant-modal-content').eq(1).find('button').eq(2).click()
            cy.get('.ant-message-notice-content').should('have.text', 'Initiative is created successfully!')
            cy.get('.ant-modal-footer').first().find('button').eq(1).click()
            cy.get('.ant-message-notice-content').should('have.text', 'Capability is updated successfully!')
            cy.get('.ant-dropdown-trigger').first().click()
            cy.get('.signIn-btn').contains('Sign out').click()
        })
    
    it('Test Delete Capability', () => {
            cy.get('form').find('button').first().should('have.text', 'Sign in')
            cy.get('form').find('span').eq(1).click()
            cy.get('.ant-select-item-option').eq(1).click()
            cy.get('.ant-select-item-option').eq(1).should('not.have.value', 'Select').and('not.be.empty')
            const button = cy.get('form').find('button').first()
            button.contains('Sign in').click()
            cy.get('.ant-message-notice-content').should('have.text', 'User was successfully log in')
            cy.get('.ant-tabs-tab-btn').contains('Products').click()
            cy.get('.ant-card-body').contains('AuthMachine').click()
            cy.get('.rst__row').find('.rst__rowLabel').find('a').contains('Test capability').click()
            cy.get('.ant-col').find('button').contains('Delete').click()
            cy.get('button').contains('Submit').click()
            cy.get('.ant-message-notice-content').should('have.text', 'Item is successfully deleted!')
    })
})