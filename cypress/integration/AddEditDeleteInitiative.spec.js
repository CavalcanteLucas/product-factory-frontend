describe('Test initiative', () => {
    
    it('Test add initiative', () => {
        cy.visit('/')
        cy.get('.ant-row').eq(1).find('button').click()
        cy.url().should('include', '/switch-test-user')
        cy.get('form').find('button').first().should('have.text', 'Sign in')
        cy.get('form').find('span').eq(1).click()
        cy.get('.ant-select-item-option').contains('Matthew Haddad').click()
        cy.get('.ant-select-item-option').eq(1).should('not.have.text', 'Select').and('not.be.empty')
        const button = cy.get('form').find('button').first()
        button.contains('Sign in').click()
        cy.get('.ant-message-notice-content').should('have.text', 'User was successfully log in')
        cy.get('.ant-tabs-tab-btn').eq(1).click()
        cy.get('.ant-card-body').contains('AuthMachine').click()
        cy.get('li').contains('Initiatives').click()
        cy.url().should('eq', 'http://localhost:8080/matt.haddad/authmachine/initiatives')
        cy.get('.product-page').find('.ant-btn').contains('Add new initiative').click()
        cy.get('.ant-modal-content').find('.ant-input').first().type('Test Initiative').should('have.value', 'Test Initiative')
        cy.get('.rdw-editor-main').type('testing demo').should('not.be.empty')
        cy.get('.ant-select-selection-item').click()
        cy.get('.ant-select-dropdown').find('.ant-select-item').contains('Active').click().should('not.be.empty')
        cy.get('.ant-input').eq(1).type('www.test.com').should('have.value', 'www.test.com')
        cy.get('.ant-modal-footer').find('button').contains('Add').click()
        cy.get('.ant-message-notice-content').should('have.text', 'Initiative is created successfully!')
        cy.get('.ant-dropdown-trigger').first().click()
        cy.get('.signIn-btn').contains('Sign out').click()
    })

    it('Test Edit Initiative', () => {
        cy.visit('/')
        cy.get('.ant-row').eq(1).find('button').click()
        cy.url().should('include', '/switch-test-user')
        cy.get('form').find('button').first().should('have.text', 'Sign in')
        cy.get('form').find('span').eq(1).click()
        cy.get('.ant-select-item-option').contains('Matthew Haddad').click()
        cy.get('.ant-select-item-option').eq(1).should('not.have.text', 'Select').and('not.be.empty')
        const button = cy.get('form').find('button').first()
        button.contains('Sign in').click()
        cy.get('.ant-message-notice-content').should('have.text', 'User was successfully log in')
        cy.get('.ant-tabs-tab-btn').eq(1).click()
        cy.get('.ant-card-body').contains('AuthMachine').click()
        cy.get('li').contains('Initiatives').click()
        cy.url().should('eq', 'http://localhost:8080/matt.haddad/authmachine/initiatives')
        cy.get('.product-page').find('.product-page-children').find('.ant-row').find('a').contains('Test Initiative').click()
        cy.get('.page-title').find('.anticon').click()
        cy.get('.ant-modal-content').find('.ant-input').first().clear().type('Test Initiative for cypress').should('have.value', 'Test Initiative for cypress')
        cy.get('.DraftEditor-editorContainer').clear().type('Here we are creating demo Inititaive for cypress').should('not.be.empty')
        cy.get('.ant-modal-body').find('.ant-select').click()
        cy.get('.ant-select-dropdown').find('.ant-select-item').contains('Active').click().should('not.be.empty')
        cy.get('.ant-input').eq(1).clear().type('www.url.com').should('have.value', 'www.url.com')
        cy.get('.ant-modal-footer').find('button').contains('Edit').click()
        cy.get('.ant-message-notice-content').should('have.text', 'Initiative is updated successfully!')
        cy.get('.ant-dropdown-trigger').first().click()
        cy.get('.signIn-btn').contains('Sign out').click()
    })

    it('Test Delete Initiative', () => {
        cy.visit('/')
        cy.get('.ant-row').eq(1).find('button').click()
        cy.url().should('include', '/switch-test-user')
        cy.get('form').find('button').first().should('have.text', 'Sign in')
        cy.get('form').find('span').eq(1).click()
        cy.get('.ant-select-item-option').contains('Matthew Haddad').click().should('have.text', 'Matthew Haddad')
        const button = cy.get('form').find('button').first()
        button.contains('Sign in').click()
        cy.get('.ant-message-notice-content').should('have.text', 'User was successfully log in')
        cy.get('.ant-tabs-tab-btn').eq(1).click()
        cy.get('.ant-card-body').contains('AuthMachine').click()
        cy.get('li').contains('Initiatives').click()
        cy.url().should('eq', 'http://localhost:8080/matt.haddad/authmachine/initiatives')
        cy.get('.product-page').find('.product-page-children').find('.ant-row').find('a').contains('Test Initiative for cypress').click()
        cy.get('.page-title').find('.anticon').click()
        cy.get('.ant-modal-content').find('.ant-modal-footer').find('button').contains('Delete this initiative').click()
        cy.get('.ant-modal-footer').find('.ant-btn-danger').contains('Submit').click()
        cy.get('.ant-message-notice-content').should('have.text', 'Item is successfully deleted!')
        cy.get('.ant-dropdown-trigger').first().click()
        cy.get('.signIn-btn').contains('Sign out').click()
    })
    
})